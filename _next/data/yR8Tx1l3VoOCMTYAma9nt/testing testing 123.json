{"pageProps":{"source":"{\"compiledSource\":\"/*@jsxRuntime automatic @jsxImportSource react*/\\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\\nconst {useMDXComponents: _provideComponents} = arguments[0];\\nfunction _createMdxContent(props) {\\n  const _components = Object.assign({\\n    h1: \\\"h1\\\",\\n    pre: \\\"pre\\\",\\n    code: \\\"code\\\",\\n    span: \\\"span\\\"\\n  }, _provideComponents(), props.components);\\n  return _jsxs(_Fragment, {\\n    children: [_jsx(_components.h1, {\\n      id: \\\"testing-testing-123\\\",\\n      children: \\\"testing testing 123\\\"\\n    }), \\\"\\\\n\\\", _jsx(_components.pre, {\\n      className: \\\"language-shell\\\",\\n      children: _jsx(_components.code, {\\n        className: \\\"language-shell code-highlight\\\",\\n        children: _jsxs(_components.span, {\\n          className: \\\"code-line\\\",\\n          children: [\\\"this is a \\\", _jsx(_components.span, {\\n            className: \\\"token builtin class-name\\\",\\n            children: \\\"test\\\"\\n          }), \\\" asdsa\\\\n\\\"]\\n        })\\n      })\\n    })]\\n  });\\n}\\nfunction MDXContent(props = {}) {\\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\\n    children: _jsx(_createMdxContent, props)\\n  })) : _createMdxContent(props);\\n}\\nreturn {\\n  default: MDXContent\\n};\\n\",\"frontmatter\":{},\"scope\":{}}","meta":{"authors":[],"title":null,"description":null,"date":null,"layout":"docs","slug":"testing testing 123","urlPath":"testing testing 123","isDraft":false,"editUrl":null,"showComments":false,"showEditLink":false,"showLinkPreviews":true,"showToc":true,"showSidebar":false},"siteMap":[]},"__N_SSG":true}